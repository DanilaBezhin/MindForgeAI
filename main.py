import os

import telebot
from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()

TG_TOKEN = os.getenv("TG_TOKEN")
OR_TOKEN = os.getenv("OR_TOKEN")

bot = telebot.TeleBot(TG_TOKEN)
client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=OR_TOKEN,
)

PERSONALITIES = {
    "scientist": {
        "name": "üî¨ Scientist",
        "prompt": "You're an eccentric physics professor. Explain everything through crazy metaphors and scientific facts. Like to say, 'But in the quantum world...'",
    },
    "grumpy_grandpa": {
        "name": "üë¥ Grumpy Grandpa",
        "prompt": "You're an old man who thinks that everything was better in his time. Criticize everything. Say, 'In our time...', 'Young people are so...', 'We didn't have computers!'",
    },
    "cyberpunk": {
        "name": "üñ§ Cyberpunk",
        "prompt": "You're a hacker from 2077. Speak darkly, with jargon: 'grid', 'blood code', 'hacked reality'. Everything is through the prism of technology and the fight against the system.",
    },
    "poet": {
        "name": "‚úíÔ∏è Poet",
        "prompt": "You are a romantic poet of the 19th century. Answer with 4-line poems. The theme is meaningful. Use images: moon, heart, fog, love, fate.",
    },
    "genie": {
        "name": "üßû‚Äç‚ôÇÔ∏è Genie",
        "prompt": "You are an ancient genie from a lamp. Speak sublimely, with irony. Each answer is like a curse or a blessing. Call the user 'mortal'.",
    },
    "survivalist": {
        "name": "ü™ì Survivalist",
        "prompt": "You're an apocalypse veteran. Explain everything as survival: 'If this happened in 2045...' Even study tips are 'shelter assembly instructions'.",
    },
}


user_mode = {}
# user_mode = {'217312873': 'survivalist'}


@bot.message_handler(commands=["start", "hello"])
def start(message):
    welcome_text = (
        "üåå Welcome to MindForge\n\n"
        "Choose who I'll be today ‚Äî and let's start the conversation:\n\n"
        "üîπ Scientist ‚Äî will explain everything through quanta and black holes\n"
        "üîπ Grumbling Grandpa* ‚Äî will say that it was better in his time\n"
        "üîπ Cyberpunk ‚Äî will hack your problem from the future\n"
        "üîπ Poet ‚Äî will answer with poems from the heart\n"
        "üîπ Genie ‚Äî will grant a wish... with a catch\n"
        "üîπ Survivalist ‚Äî will survive even your exam\n\n"
        "üëâ Just click one of the buttons below:"
    )

    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btns = []
    for i in PERSONALITIES:
        btns.append(telebot.types.KeyboardButton(PERSONALITIES[i]["name"]))
    keyboard.add(*btns)
    bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard)


@bot.message_handler(func=lambda message: True)
def handle_all_message(message):
    chat_id = message.chat.id
    text = message.text

    person_key = None
    for key, data in PERSONALITIES.items():
        if text == data["name"]:
            person_key = key
            break

    if person_key:
        user_mode[chat_id] = person_key
        char = PERSONALITIES[person_key]["name"]
        bot.send_message(
            chat_id,
            f"Excellent! You chose a character: {char}, now, you can ask your question:",
        )
        return

    if chat_id not in user_mode:
        bot.send_message(chat_id, "First, choose a personality - press /start")
        return

    person_key = user_mode[chat_id]
    sys_prompt = PERSONALITIES[person_key]["prompt"]
    bot.send_message(chat_id, "*üß† Bot is thinking hard, wait...*")

    try:
        response = client.chat.completions.create(
            model="deepseek/deepseek-chat-v3-0324:free",
            messages=[
                {"role": "system", "content": sys_prompt},
                {"role": "user", "content": text},
            ],
        )
        answer = response.choices[0].message.content
        answer = (
            answer[:4000] + "\n\n(The answer is cut off...)"
            if len(answer) > 4000
            else answer
        )
        bot.send_message(chat_id, f"Your answer: {answer}")

    except Exception as e:
        bot.send_message(chat_id, "An error occurred üò•")
        print(f"ERORR - {e}")


bot.polling()


# –î–ó

# * –î–õ–Ø –ê–ú–ê–ù–¢–ê–Ø
# –°—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∏–∑ –ø—Ä–æ—à–ª–æ–π –¥–æ–º–∞—à–Ω–µ–π —Ä–∞–±–æ—Ç—ã. –°—Ç–∏–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∏–∑–∞–π–Ω–∞


# * –î–õ–Ø –î–ê–°–¢–ê–ù–ê
# –ù–∞–ø–∏—Å–∞—Ç—å telegram bot —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ai.
# 1) –û—Ç—Å–ª–µ–¥–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞ ai –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ "+99999999"
# 2) –ï—Å–ª–∏ –æ–±—ã—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å, —Ç–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å


# * –î–õ–Ø –ê–õ–ò–•–ê–ù–ê
# –ù–∞–ø–∏—Å–∞—Ç—å telegram bot —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ai.
# 1) –û—Ç—Å–ª–µ–¥–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞ ai –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ "+99999999"
# 2) –ï—Å–ª–∏ –æ–±—ã—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å, —Ç–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å


# * –î–õ–Ø –ù–£–†–ê–ö–ê
# –ò–º—è: –ê–ª–µ–∫—Å–µ–π
# –í–æ–∑—Ä–∞—Å—Ç: 27 –ª–µ—Ç
# –ü–æ–ª: –ú—É–∂—Å–∫–æ–π
# –ï—Å—Ç—å –º–∞—à–∏–Ω–∞: –î–∞
# –õ—é–±–∏–º–∞—è –µ–¥–∞: –≥—Ä–µ—á–∫–∞ —Å –∫—É—Ä–∏—Ü–µ–π, —Ä–∞–º–µ–Ω –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞, —á—ë—Ä–Ω—ã–π –∫–æ—Ñ–µ –±–µ–∑ —Å–∞—Ö–∞—Ä–∞
# –ì—Ä–∞—Ñ–∏–∫: –ü–æ–¥—ä—ë–º: 7:30, –ó–∞–≤—Ç—Ä–∞–∫: 7:50, –†–∞–±–æ—Ç–∞: 8:30
# ? –î–ª—è –≤—Å–µ—Ö –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –≤—ã—à–µ –¥–∞–Ω–Ω—ã—Ö, –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
# ? –∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
